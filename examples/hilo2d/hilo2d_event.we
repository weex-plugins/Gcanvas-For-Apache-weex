<template>
    <div id="test">
        <text id="canvas_demo1" style="width:750;height:100;backgroundColor:#e0e0e0">fps:{{fps}}</text>
        <div ontouchend="onTouch" ontouchmove="onTouch" ontouchstart="onTouch" style="width: 750;height: 750;position:relative;">
            <gcanvas id="canvas_holder" style="position:absolute;top:0;left:0;width:750;height:750;backgroundColor:#ffffff"></gcanvas>
        </div>
        <text id="canvas_demo1" style="width:750;height:100;backgroundColor:#e0e0e0">hilo_demo 上边界</text>
    </div>
</template>
<script>
    var Hilo = require('@ali/hilo-weex');
    //var Hilo = require('/Users/yuankong/code/hilo-weex/index.js');
    var Image = Hilo.Image;
    var CanvasElement = Hilo.CanvasElement;
    var modal = require('@weex-module/modal');


    module.exports = {
        data: {
            fps: 0
        },

        created: function () {
            Hilo.resetGCanvas();
        },

        ready: function () {
            // modal.toast({
            //     message: 'ready..',
            //     duration: 1
            // })
            var that = this;
            var ele = this.ele = new CanvasElement(this.$el('canvas_holder'));
            this.stage = new Hilo.Stage({
                renderType: 'canvas',
                canvas: ele,
                width: 750,
                height: 750
            });
            setTimeout(function () {
                var img = new Image();
                img.onload = function () {
                    that.start(img);
                };
                img.src = 'http://img.alicdn.com/tps/TB12IsqKVXXXXalXpXXXXXXXXXX-174-1512.png';
            }, 200);
        },
        methods: {
            onTouch: function (evt) {
                this.ele.fire(evt);
            },
            start: function (img) {
                modal.toast({
                    message: 'start..',
                    duration: 1
                })
                var ele = this.ele;
                var stage = this.stage;

                stage.enableDOMEvent([Hilo.event.POINTER_START, Hilo.event.POINTER_END, Hilo.event.POINTER_MOVE]);

                var ticker = new Hilo.Ticker(50);
                //var ticker = new Hilo.Ticker(30);
                ticker.addTick(stage);
                ticker.addTick(Hilo.Tween);
                ticker.start();
                var self = this;
                ticker.addTick({
                    tick: function () {
                        self.fps = ticker._measuredFPS
                    }
                });

                var atlas = new Hilo.TextureAtlas({
                    image: img,
                    width: 174,
                    height: 1512,
                    frames: {
                        frameWidth: 174,
                        frameHeight: 126,
                        numFrames: 12
                    },
                    sprites: {
                        fish: {from:0, to:7}
                    }
                });

                var createFish = function (x, y, isMove) {
                    var testFish = atlas.getSprite('fish');

                    var fish = new Hilo.Sprite({
                        width: 174,
                        height: 126,
                        frames: atlas.getSprite('fish'),
                        x: x,
                        y: y,
                        interval: 6,
                        timeBased: false,
                        loop: true,
                        pointerEnabled: true
                    }).addTo(stage).on(Hilo.event.POINTER_END, evt => {
                        modal.toast({
                            message: 'click',
                            duration: 1
                        })
                    });
                    if (isMove) {
                        fish.onUpdate = function(){
                            if(this.x > stage.width - this.pivotX){
                                this.x = 0;
                            }else{
                                this.x += 3;
                            }
                        }
                    } else {
                        Hilo.copy(fish, Hilo.drag);
                        fish.startDrag([0, 0, 550, 400]);
                    }
                };

                createFish(0, 100, true);
                for (var i = 0; i < 10; i++) {
                    createFish(0, i * 10, true);
                }
            }
        }
    }
</script>
